apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: neo4j-core
spec:
  replicas: 3
  serviceName: neo4j
  template:
    metadata:
      labels:
        app: neo4j
        component: core
    spec:
      containers:
      - command:
        - /bin/bash
        - -c
        - |
          export NEO4J_dbms_connectors_default__advertised__address=$(hostname -f)
          export NEO4J_causal__clustering_discovery__advertised__address=$(hostname -f):5000
          export NEO4J_causal__clustering_transaction__advertised__address=$(hostname -f):6000
          export NEO4J_causal__clustering_raft__advertised__address=$(hostname -f):7000
          exec /docker-entrypoint.sh "neo4j"
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: NEO4J_dbms_mode
          value: CORE
        - name: NUMBER_OF_CORES
          value: "3"
        - name: NEO4J_dbms_security_auth__enabled
          value: "false"
        - name: NEO4J_causal__clustering_discovery__type
          value: DNS
        - name: NEO4J_causal__clustering_initial__discovery__members
          value: neo4j.wow.svc.cluster.local:5000
        - name: NEO4J_ACCEPT_LICENSE_AGREEMENT
          value: "yes"
        image: neo4j:3.3.2-enterprise
        imagePullPolicy: IfNotPresent
        name: neo4j
        ports:
        - containerPort: 5000
          name: discovery
        - containerPort: 7000
          name: raft
        - containerPort: 6000
          name: tx
        - containerPort: 7474
          name: browser
        - containerPort: 7687
          name: bolt
        - containerPort: 6362
          name: backup
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /data
          name: datadir
  volumeClaimTemplates:
  - metadata:
      name: datadir
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 10Gi
      storageClassName: standard
